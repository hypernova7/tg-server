name: Deploy to

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    # Runs at 12am UTC
    - cron: "0 0 * * *"

permissions: {}
jobs:
  checkout:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    env:
      FORCE_DEPLOY: ${{ secrets.FORCE_DEPLOY }}
    outputs:
      new_update: ${{ steps.status.outputs.new_update }}
      force_deploy: ${{ steps.status.outputs.force_deploy }}
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Checkout for updates
        uses: actions/github-script@main
        id: status
        with:
          script: |
            const checkForUpdates = require('./scripts/check-for-updates');
            await checkForUpdates({ context, core, exec, github });
  flyio:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    environment: Fly.io
    needs: checkout
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Installing flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploying to Fly.io
        if: |
          needs.checkout.outputs.new_update == 'true'
            || needs.checkout.outputs.force_deploy == 'true'
              && env.FLY_API_TOKEN != ''
        run: flyctl deploy
  heroku:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    environment: Heroku
    needs: checkout
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Deploying to Heroku
        if: |
          needs.checkout.outputs.new_update == 'true'
            || needs.checkout.outputs.force_deploy == 'true'
              && env.HEROKU_APP_NAME != ''
                && env.HEROKU_API_KEY != ''
        run: |
          heroku container:login
          heroku container:push web -a $HEROKU_APP_NAME
          heroku container:release web -a $HEROKU_APP_NAME
  commit:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [checkout, flyio, heroku]
    if: ${{ always() }}
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Commit submodule updates
        if: needs.checkout.outputs.new_update == 'true'
        run: |
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .
            git commit -am "Updated telegram-bot-api submodules" || echo "Nothing to commit"
            git push origin main
