name: Docker Container

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    # Runs at 12am UTC
    - cron: "0 0 * * *"

jobs:
  container:
    runs-on: ubuntu-latest
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      FORCE_DEPLOY: ${{ secrets.FORCE_DEPLOY }} # optional
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Checkout upstream repo
        uses: actions/checkout@v2
        with:
          repository: tdlib/telegram-bot-api
          path: telegram-bot-api
          submodules: recursive
      - name: Cache
        uses: actions/cache@main
        with:
          path: ~/tmp/.cache
          key: ${{ runner.os }}-tg-server-${{ github.sha }}
      - name: Check for telegram-bot-api updates
        id: check-updates
        run: |
          make update
          echo ::set-output name=deploy::$([[ -z "$FORCE_DEPLOY" && "$FORCE_DEPLOY" != "true" ]] && echo $([ -z "`git status --porcelain`" ] && echo "false" || echo "true") || echo "true")
      - name: Deploy Docker Container to Heroku
        id: auto-commit-updates
        if: steps.check-updates.outputs.deploy == 'true'
        run: |
          heroku container:login
          make release appname=$HEROKU_APP_NAME
          echo ::set-output name=push::$([ -z "`git status --porcelain`" ] && echo "false" || echo "true")
      - name: Auto commit updates
        if: steps.auto-commit-updates.outputs.push == 'true'
        run: |
            git config --local user.name "Github Action"
            git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add .
            git commit -m "Update telegram-bot-api submodules"
            git push origin main
